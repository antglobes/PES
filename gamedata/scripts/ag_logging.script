
local dbg_lvl = "player"

function set_debug_level(new_dbg_level)
	dbg_lvl = new_dbg_level
end

_G.printf = function(fmt, ...)
    if not (fmt) then return end
	local fmt = tostring(fmt)

	if (select('#',...) >= 1) then
		local i = 0
		local p = {...}
		local function sr(a)
			i = i + 1
			if (type(p[i]) == 'userdata') then
				if (p[i].x and (p[i].y or (p[i].y and p[i].z))) then
					return vec_to_str(p[i])
				end
				return 'userdata'
			elseif (type(p[i]) == "table") then
                return utils_data.print_table(p[i], nil, true)    
            end
			return tostring(p[i])
		end
		fmt = string.gsub(fmt,"%%s",sr)
	end
	if (log) then
		log(fmt)
		--exec_console_cmd("flush")
	else
		exec_console_cmd("load ~#debug msg:"..fmt)
	end	
end

function dbg_pr(header, str, ...)
    if pes_mcm.get_config("enable_debug") then
        printf(header, strformat(str, ...))
    end
end

function pr(str, ...)
    dbg_pr("[AG|Logging]: %s", str, ...)
end
